
# Environment variables
unprotect('undefined'); unassign('undefined'); protect('undefined');
unprotect('UserConfigurationFolder'); UserConfigurationFolder:="C:/Users/azh/Local/maple/": protect('UserConfigurationFolder');
unprotect('ModulesFolder'); ModulesFolder:="C:/Users/azh/Sci/Math/CompMath/Maple/": protect('ModulesFolder');
unprotect('TemporaryFilesFolder'); TemporaryFilesFolder:="C:/tmp/": protect('TemporaryFilesFolder');
unprotect('TemporaryStorage'); TemporaryStorage:=cat(TemporaryFilesFolder,"tmp.m"): protect('TemporaryStorage');
unprotect('RootDataFolder'); RootDataFolder:="C:/Users/azh/Data/": protect('RootDataFolder');
Order:=5:
Digits:=floor(evalhf(Digits)):
_EnvLegendreCut:=1..infinity:

# Interface settings
interface(displayprecision=6):
interface(rtablesize=16):

# Plots
plots[setoptions](color="Black",symbol=circle,symbolsize=8,labeldirections=[horizontal,vertical], # axis=[tickmarks=[thickness=1]] - blocks futher use of tickmarks
 font=["Helvetica",12],labelfont=["Helvetica",14],axesfont=["Helvetica",12],legendstyle=[font=["Helvetica",12]]); # captionfont=["Helvetica",12] - raises error for dualaxisplot
plots[setoptions3d](axes=normal,orientation=[270,0],shading=zhue);

# Load packages
with(LinearAlgebra):
with(BasicTools):

with(plots,pointplot,pointplot3d,textplot,logplot,semilogplot,loglogplot,dualaxisplot,display):
with(StringTools,DeleteSpace,FormatTime,Join,LowerCase,RegMatch,Split,SubstituteAll,UpperCase):
with(ListTools,Categorize,MakeUnique,Reverse):
with(FileTools,ListDirectory,IsDirectory):
with(Optimization,Minimize,Maximize):
with(Statistics,DataSummary,Histogram,Mean,QuadraticMean,Median,RandomVariable,Sample,StandardDeviation,Percentile,Decile):
with(FiniteGroups,SymmetryGroup,TransformationTable,kPoints):

# Define frequently used commands
unprotect('fexists,frename,fcopy,mkdir1,random,split');

fexists:=FileTools[Exists]:
frename:=FileTools[Rename]:
fcopy:=FileTools[Copy]:
mkdir1:=f->`if`(FileTools[Exists](f),NULL,mkdir(f)):

random:=proc() RandomTools[Generate](float('range'=0..1,'method'='uniform')) end:
randomize():

split:=s->remove(`=`,map(StringTools[Trim],StringTools[Split](s,",")),""):

protect('fexists,frename,fcopy,mkdir1,random,split');

# Unprotect names of obsolete commands
unprotect('lattice');
